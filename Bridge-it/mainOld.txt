#include <SFML/Graphics.hpp>
#include "BridgeIT.h"
#include <iostream>

int main()
{
	//extern int offset;
	//std::cout << offset;
	//sf::RenderWindow window(sf::VideoMode(1280, 720), "Bridge-IT");
	BridgeIT game;
	game.ñreate_window();


	while (game.gameWindow.isOpen())
	{
		sf::Event event;
		if (event.type == sf::Event::Closed)
		{
			game.gameWindow.close();
			return;
		}

		if (event.type == sf::Event::KeyPressed && event.key.code == sf::Keyboard::Escape)
		{
			game.gameWindow.close();
			return;
		}
		game.gameWindow.clear();
		for (int i = 0; i < 5; i++)
		{
			for (int j = 0; j < 6; j++)
			{
				game.redShapes[i][j].setPosition(offset + j * offset, 100 + i * offset);
				game.gameWindow.draw(redShapes[i][j]);
				/*std::cout << i << ' ' << j;
				std::getchar();*/
			}
		}
		for (int i = 0; i < 6; i++)
		{
			for (int j = 0; j < 5; j++)
			{
				blueShapes[j][i].setPosition(offset + 0.5*offset + j * offset, offset + 0.5*offset + i * offset);
				gameWindow.draw(blueShapes[j][i]);

			}
		}
		gameWindow.display();
	}
		/*sf::Event event;
		while (game.gameWindow.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				game.gameWindow.close();

		}*/
		game.draw_field();

		return 0;
	}
	/*while (window.isOpen())
	{
		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();

		}
		game.draw_field();
		game.gameWindow.display();
		return 0;
	}*/
}